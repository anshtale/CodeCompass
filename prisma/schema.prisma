generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [pgvector(map: "vector", schema: "extensions")]
}
model User {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    imageUrl String?
    firstName String?
    lastName String?

    emailAddress String @unique
    credits Int @default(100)
    
    userToProjects UserToProject[]


}

model Project{
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    name String
    githubUrl String

    deletedAt DateTime?
    Commits Commit[]
    userToProjects UserToProject[]
    SourceCodeEmbeddings SourceCodeEmbedding[]
}

model UserToProject{
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    userId String
    projectId String

    user User @relation(fields: [userId],references: [id])
    project Project @relation(fields: [projectId],references: [id])

    @@unique([userId,projectId])
}

model Commit{
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    projectId String
    project Project @relation(fields: [projectId],references: [id])

    commitMessage String
    commitHash String
    commitAuthorName String
    commitAuthorAvatar String
    commitDate DateTime

    summary String    
}

model SourceCodeEmbedding {
    id String @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode String
    fileName String
    summary String

    projectId String
    project Project @relation(fields: [projectId],references: [id])

}

